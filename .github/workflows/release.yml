name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - "v*"

jobs:
  draft-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Generate release notes from CHANGELOG
        id: notes
        run: |
          VERSION_RAW="${GITHUB_REF_NAME}"
          VERSION_STRIPPED="${VERSION_RAW#v}"
          echo "version=$VERSION_RAW" >> $GITHUB_OUTPUT
          if grep -q "^## \[$VERSION_STRIPPED\]" CHANGELOG.md; then
            sed -n "/^## \\[$VERSION_STRIPPED\\]/,/^## \\[/p" CHANGELOG.md | sed '1d;$d' > RELEASE_NOTES.md || true
          fi
          if [ ! -s RELEASE_NOTES.md ]; then
            printf "## %s\n\nAutomated release.\n" "$VERSION_RAW" > RELEASE_NOTES.md
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body_path: RELEASE_NOTES.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-binaries:
    continue-on-error: ${{ matrix.allow_failure == true }}
    runs-on: ${{ matrix.os }}
    needs: draft-release
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: linux-amd64
          - os: ubuntu-22.04-arm64
            arch: linux-arm64
            allow_failure: true
          - os: macos-13
            arch: macos-amd64
          - os: macos-14
            arch: macos-arm64
          - os: windows-latest
            arch: windows-amd64
    steps:
      - uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v3

      - name: Set up Python 3.11
        run: uv python install 3.11

      - name: Sync deps
        run: uv sync --all-groups

      - name: Install PyInstaller
        run: uv add pyinstaller

      - name: Build CLI (lite)
        env:
          PYINSTALLER_STRIP: "true"
        run: |
          pwd && ls -la packaging/
          uv run pyinstaller --onefile packaging/run_cli.py --name chatty-lite
          ls -lah dist

      - name: Rename artifact per arch (non-Windows)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          NAME="chatty-lite-${{ matrix.arch }}"
          mv dist/chatty-lite "$NAME"
          echo "ARTIFACT=$NAME" >> $GITHUB_ENV

      - name: Rename artifact per arch (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $name = "chatty-lite-${{ matrix.arch }}.exe"
          Move-Item "dist/chatty-lite.exe" $name
          echo "ARTIFACT=$name" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: ${{ env.ARTIFACT }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
