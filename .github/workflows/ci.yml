name: ci
on:
  push:
    branches: [ "**" ]
    paths:
      - "src/**"
      - "tests/**"
      - "pyproject.toml"
      - ".github/workflows/ci.yml"
  pull_request:
    branches: [ "**" ]
    paths:
      - "src/**"
      - "tests/**"
      - "pyproject.toml"
      - ".github/workflows/ci.yml"
  workflow_dispatch:
    inputs:
      run_full_tests:
        description: 'Run full test matrix'
        required: false
        default: false
        type: boolean

jobs:
  # Fast hot-paths job for quick feedback
  hot-paths:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Cache ruff
        uses: actions/cache@v4
        with:
          path: ~/.cache/ruff
          key: ruff-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}
      - name: Install minimal dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff uv
      - name: Lint with ruff
        run: ruff check src tests
      - name: Compile syntax check
        run: |
          python -c "import py_compile; py_compile.compile('src/chatty_commander/web/server.py', doraise=True)"
          echo "✔ server.py compiles"
      - name: Metadata smoke test
        run: |
          pip install -e .
          python -c "import chatty_commander; print(f'✔ Package loads: {chatty_commander.__version__}')"

  # Full test matrix (runs on manual dispatch or when labeled)
  test:
    runs-on: ubuntu-latest
    if: github.event.inputs.run_full_tests == 'true' || contains(github.event.pull_request.labels.*.name, 'run-full-tests')
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
      - name: Install uv and dependencies
        run: |
          python -m pip install --upgrade pip uv
          uv sync --all-groups
      - name: Run guard tests
        run: |
          if test -f tests/test_web_server_guards.py; then
            uv run pytest -q tests/test_web_server_guards.py
          fi
      - name: Run syntax safety tests
        run: |
          if test -f tests/test_syntax_safety.py; then
            uv run pytest -q tests/test_syntax_safety.py
          fi
      - name: Run core tests
        run: |
          uv run pytest -q tests/test_version_endpoint.py tests/test_core_endpoints_minimal.py || true
