version: "3.8"

services:
  chatty-commander:
    build: .
    ports:
      - "8100:8100"
    environment:
      - PYTHONPATH=/app/src
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ADVISORS_ENABLED=true
      - ADVISORS_MODEL=gpt-3.5-turbo
      - ADVISORS_API_MODE=completion
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config.json:/app/config.json:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8100/api/v1/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for session management (future enhancement)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - with-redis

  # Optional: PostgreSQL for persistent storage (future enhancement)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: chatty_commander
      POSTGRES_USER: chatty
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-chatty123}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    profiles:
      - with-database

volumes:
  redis_data:
  postgres_data:

networks:
  default:
    name: chatty-commander-network
